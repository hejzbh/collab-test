// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid()) @map("_id") 
  email String @db.String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  bookmarks Bookmark[]
  clips Clip[]
}


model Clip {
    id String   @id @default(auto()) @map("_id") @db.ObjectId
    title String @db.String
    description String? @db.String
    userId String
    awsKey String 
    user User @relation(fields: [userId],references: [id],onDelete:Cascade)
    matching Matching[]
    thumbnail String?
    createdAt DateTime @default(now())
    duration Int?
    updatedAt DateTime @updatedAt
    @@index([userId])
} 

model Video {
      id String   @id @default(auto()) @map("_id") @db.ObjectId
    awsKey String 
    youtubeId String @db.String @unique
    matching Matching[]
    title String @db.String
    thumbnail String?
    duration Int?
}


model Matching {
    id String   @id @default(auto()) @map("_id") @db.ObjectId
    clipId String  @db.ObjectId
    clip Clip @relation(fields: [clipId], references: [id] ,onDelete:Cascade)

    videoId String  @db.ObjectId
    video Video @relation(fields: [videoId], references: [id] ,onDelete:Cascade)

    videoAwsKey String
    clipAwsKey String 

    matchingMoments Json


    bookmarks Bookmark[]

    @@index([clipId])
    @@index([videoId])
}

model Bookmark {
    id String @id @default(uuid()) @map("_id") 
    matchingId String  @db.ObjectId
    matching Matching @relation(fields: [matchingId],references: [id],onDelete:Cascade)
    userId String
    user User @relation(fields: [userId],references: [id],onDelete:Cascade)
    @@index([matchingId])
    @@index([userId])

}


